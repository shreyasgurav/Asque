"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/bots/by-owner/[ownerId]";
exports.ids = ["pages/api/bots/by-owner/[ownerId]"];
exports.modules = {

/***/ "firebase-admin/app":
/*!*************************************!*\
  !*** external "firebase-admin/app" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("firebase-admin/app");

/***/ }),

/***/ "firebase-admin/auth":
/*!**************************************!*\
  !*** external "firebase-admin/auth" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("firebase-admin/auth");

/***/ }),

/***/ "firebase-admin/firestore":
/*!*******************************************!*\
  !*** external "firebase-admin/firestore" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = require("firebase-admin/firestore");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("firebase/app");;

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/***/ ((module) => {

module.exports = import("firebase/auth");;

/***/ }),

/***/ "firebase/firestore":
/*!*************************************!*\
  !*** external "firebase/firestore" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase/firestore");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_bots_by_owner_ownerId_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/bots/by-owner/[ownerId].ts */ \"(api)/./pages/api/bots/by-owner/[ownerId].ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_bots_by_owner_ownerId_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_bots_by_owner_ownerId_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_bots_by_owner_ownerId_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_bots_by_owner_ownerId_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/bots/by-owner/[ownerId]\",\n        pathname: \"/api/bots/by-owner/[ownerId]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_bots_by_owner_ownerId_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmJvdHMlMkZieS1vd25lciUyRiU1Qm93bmVySWQlNUQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmJvdHMlMkZieS1vd25lciUyRiU1Qm93bmVySWQlNUQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDbUU7QUFDbkU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLGdFQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxnRUFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3F1ZS1ib3QtcGxhdGZvcm0vPzZkYTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9ib3RzL2J5LW93bmVyL1tvd25lcklkXS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2JvdHMvYnktb3duZXIvW293bmVySWRdXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYm90cy9ieS1vd25lci9bb3duZXJJZF1cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/auth/server.ts":
/*!****************************!*\
  !*** ./lib/auth/server.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticateRequest: () => (/* binding */ authenticateRequest),\n/* harmony export */   verifyAuthToken: () => (/* binding */ verifyAuthToken),\n/* harmony export */   verifyBotOwnership: () => (/* binding */ verifyBotOwnership),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withBotOwnership: () => (/* binding */ withBotOwnership)\n/* harmony export */ });\n/* harmony import */ var firebase_admin_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin/auth */ \"firebase-admin/auth\");\n/* harmony import */ var firebase_admin_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_admin_app__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Initialize Firebase Admin if not already initialized\nif (!(0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_1__.getApps)().length) {\n    const privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\");\n    if (process.env.FIREBASE_PROJECT_ID && process.env.FIREBASE_CLIENT_EMAIL && privateKey) {\n        (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_1__.initializeApp)({\n            credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_1__.cert)({\n                projectId: process.env.FIREBASE_PROJECT_ID,\n                clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n                privateKey: privateKey\n            })\n        });\n        console.log(\"\\uD83D\\uDD25 Firebase Admin initialized\");\n    } else {\n        console.warn(\"⚠️ Firebase Admin not initialized - missing environment variables\");\n    }\n}\n// Extract auth token from request headers\nconst getAuthToken = (req)=>{\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith(\"Bearer \")) {\n        return authHeader.substring(7);\n    }\n    // Also check for token in cookies (for browser requests)\n    const tokenFromCookie = req.cookies[\"auth-token\"];\n    if (tokenFromCookie) {\n        return tokenFromCookie;\n    }\n    return null;\n};\n// Verify Firebase auth token and return user info\nconst verifyAuthToken = async (token)=>{\n    try {\n        // In development mode, if Firebase is not configured, allow test tokens\n        if ( true && !(0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_1__.getApps)().length) {\n            console.log(\"\\uD83D\\uDD27 Development mode: Using test authentication\");\n            // Allow test tokens for development\n            if (token === \"test-token\") {\n                return {\n                    uid: \"JxNSv886lwN8CYMdqAityIbtFA43\",\n                    email: \"test@example.com\",\n                    phoneNumber: \"+911234567890\"\n                };\n            }\n            // Allow any token that starts with 'dev-'\n            if (token.startsWith(\"dev-\")) {\n                const uid = token.replace(\"dev-\", \"\");\n                return {\n                    uid,\n                    email: `${uid}@example.com`,\n                    phoneNumber: \"+911234567890\"\n                };\n            }\n        }\n        const auth = (0,firebase_admin_auth__WEBPACK_IMPORTED_MODULE_0__.getAuth)();\n        const decodedToken = await auth.verifyIdToken(token);\n        return {\n            uid: decodedToken.uid,\n            email: decodedToken.email,\n            phoneNumber: decodedToken.phone_number\n        };\n    } catch (error) {\n        console.error(\"❌ Token verification failed:\", error);\n        throw new Error(\"Invalid authentication token\");\n    }\n};\n// Middleware function to authenticate API requests\nconst authenticateRequest = async (req, res)=>{\n    try {\n        const token = getAuthToken(req);\n        if (!token) {\n            res.status(401).json({\n                success: false,\n                error: \"Authentication required\",\n                timestamp: new Date()\n            });\n            return null;\n        }\n        const user = await verifyAuthToken(token);\n        return user;\n    } catch (error) {\n        console.error(\"❌ Authentication error:\", error);\n        res.status(401).json({\n            success: false,\n            error: \"Invalid authentication credentials\",\n            timestamp: new Date()\n        });\n        return null;\n    }\n};\n// Higher-order function to wrap API handlers with authentication\nconst withAuth = (handler)=>{\n    return async (req, res)=>{\n        const user = await authenticateRequest(req, res);\n        if (!user) {\n            // Response already sent by authenticateRequest\n            return;\n        }\n        // Add user to request object\n        req.user = user;\n        // Call the original handler\n        return handler(req, res);\n    };\n};\n// Verify bot ownership (now with phone number fallback)\nconst verifyBotOwnership = async (botId, userId, userPhoneNumber)=>{\n    try {\n        // Import here to avoid circular dependency\n        const { serverDb } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/database */ \"(api)/./lib/database/index.ts\"));\n        const bot = await serverDb.getBot(botId);\n        if (!bot) {\n            return false;\n        }\n        // Direct ownership check\n        if (bot.ownerId === userId) {\n            return true;\n        }\n        // Phone number fallback\n        if (userPhoneNumber && bot.ownerPhoneNumber === userPhoneNumber) {\n            console.log(\"✅ Bot ownership verified via phone number fallback\");\n            // Update the bot's ownerId for future consistency\n            bot.ownerId = userId;\n            await serverDb.updateBot(bot);\n            return true;\n        }\n        return false;\n    } catch (error) {\n        console.error(\"❌ Error verifying bot ownership:\", error);\n        return false;\n    }\n};\n// Middleware to verify bot ownership for bot-specific operations\nconst withBotOwnership = (handler)=>{\n    return withAuth(async (req, res)=>{\n        const { botId } = req.query;\n        if (!botId || typeof botId !== \"string\") {\n            return res.status(400).json({\n                success: false,\n                error: \"Bot ID is required\",\n                timestamp: new Date()\n            });\n        }\n        const isOwner = await verifyBotOwnership(botId, req.user.uid, req.user.phoneNumber);\n        if (!isOwner) {\n            return res.status(403).json({\n                success: false,\n                error: \"Access denied: You do not own this bot\",\n                timestamp: new Date()\n            });\n        }\n        return handler(req, res);\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/auth/server.ts\n");

/***/ }),

/***/ "(api)/./lib/database/index.ts":
/*!*******************************!*\
  !*** ./lib/database/index.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clientDb: () => (/* binding */ clientDb),\n/* harmony export */   serverDb: () => (/* binding */ serverDb)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firebase */ \"(api)/./lib/firebase.ts\");\n/* harmony import */ var _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/firebase-admin */ \"(api)/./lib/firebase-admin.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_firestore__WEBPACK_IMPORTED_MODULE_0__, _lib_firebase__WEBPACK_IMPORTED_MODULE_1__]);\n([firebase_firestore__WEBPACK_IMPORTED_MODULE_0__, _lib_firebase__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n// Mock database file paths\nconst DEV_DATA_DIR = path__WEBPACK_IMPORTED_MODULE_4___default().join(process.cwd(), \".dev-data\");\nconst BOTS_FILE = path__WEBPACK_IMPORTED_MODULE_4___default().join(DEV_DATA_DIR, \"bots.json\");\nconst CHAT_SESSIONS_FILE = path__WEBPACK_IMPORTED_MODULE_4___default().join(DEV_DATA_DIR, \"chatSessions.json\");\nconst UNANSWERED_QUESTIONS_FILE = path__WEBPACK_IMPORTED_MODULE_4___default().join(DEV_DATA_DIR, \"unansweredQuestions.json\");\n// Ensure dev data directory exists\nif (!fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(DEV_DATA_DIR)) {\n    fs__WEBPACK_IMPORTED_MODULE_3___default().mkdirSync(DEV_DATA_DIR, {\n        recursive: true\n    });\n}\n// Mock database helper functions\nconst loadMockData = (filePath)=>{\n    try {\n        if (fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(filePath)) {\n            const data = fs__WEBPACK_IMPORTED_MODULE_3___default().readFileSync(filePath, \"utf-8\");\n            return JSON.parse(data);\n        }\n    } catch (error) {\n        console.warn(`Could not read ${filePath}:`, error);\n    }\n    return {};\n};\nconst saveMockData = (filePath, data)=>{\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_3___default().writeFileSync(filePath, JSON.stringify(data, null, 2));\n    } catch (error) {\n        console.error(`Could not save to ${filePath}:`, error);\n    }\n};\n// Client-side database operations (for frontend)\nconst clientDb = {\n    // Get bot data\n    async getBot (botId) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_1__.db, \"bots\", botId);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error fetching bot:\", error);\n            return null;\n        }\n    },\n    // Add chat session\n    async addChatSession (sessionData) {\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase__WEBPACK_IMPORTED_MODULE_1__.db, \"chatSessions\"), sessionData);\n            return docRef.id;\n        } catch (error) {\n            console.error(\"Error adding chat session:\", error);\n            return null;\n        }\n    }\n};\n// Helper function to calculate analytics\nconst calculateAnalytics = (sessions)=>{\n    const totalVisitors = sessions.length;\n    const totalChats = sessions.reduce((sum, session)=>sum + session.messageCount, 0);\n    const totalMessages = sessions.reduce((sum, session)=>sum + session.messages.length, 0);\n    const averageResponseTime = sessions.length > 0 ? sessions.reduce((sum, session)=>sum + (session.averageResponseTime || 0), 0) / sessions.length : 0;\n    const successfulResponses = sessions.reduce((sum, session)=>sum + session.successfulResponses, 0);\n    const failedQuestions = sessions.reduce((sum, session)=>sum + session.failedQuestions, 0);\n    return {\n        totalVisitors,\n        totalChats,\n        totalMessages,\n        averageResponseTime,\n        successfulResponses,\n        failedQuestions,\n        successRate: totalMessages > 0 ? successfulResponses / totalMessages * 100 : 0,\n        dailyVisitors: [],\n        weeklyChats: [],\n        topQuestions: [],\n        responseTimeHistory: []\n    };\n};\n// Server-side database operations (for API routes)\nconst serverDb = {\n    // Get bot by ID\n    async getBot (botId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const bots = loadMockData(BOTS_FILE);\n            const bot = bots[botId];\n            if (bot) {\n                return {\n                    ...bot,\n                    createdAt: new Date(bot.createdAt),\n                    updatedAt: new Date(bot.updatedAt),\n                    deployedAt: bot.deployedAt ? new Date(bot.deployedAt) : undefined\n                };\n            }\n            return null;\n        }\n        try {\n            const docRef = _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"bots\").doc(botId);\n            const docSnap = await docRef.get();\n            if (docSnap.exists) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error fetching bot from Firebase:\", error);\n            return null;\n        }\n    },\n    // Get bot with analytics\n    async getBotWithAnalytics (botId) {\n        const bot = await this.getBot(botId);\n        if (!bot) return null;\n        const sessions = await this.getChatSessionsByBot(botId);\n        bot.analytics = calculateAnalytics(sessions);\n        return bot;\n    },\n    // Create new bot\n    async createBot (botData) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const bots = loadMockData(BOTS_FILE);\n            const cleanBotData = {\n                ...botData,\n                description: botData.description || \"\",\n                deployedAt: botData.deployedAt || null,\n                profilePictureUrl: botData.profilePictureUrl || null,\n                welcomeMessage: botData.welcomeMessage || null\n            };\n            bots[botData.id] = cleanBotData;\n            saveMockData(BOTS_FILE, bots);\n            return botData;\n        }\n        try {\n            const cleanBotData = {\n                ...botData,\n                description: botData.description || \"\",\n                deployedAt: botData.deployedAt || null,\n                profilePictureUrl: botData.profilePictureUrl || null,\n                welcomeMessage: botData.welcomeMessage || null\n            };\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"bots\").doc(botData.id).set(cleanBotData);\n            return botData;\n        } catch (error) {\n            console.error(\"Error saving bot to Firebase:\", error);\n            throw error;\n        }\n    },\n    // Update bot\n    async updateBot (botData) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const bots = loadMockData(BOTS_FILE);\n            const cleanBotData = {\n                ...botData,\n                description: botData.description || \"\",\n                deployedAt: botData.deployedAt || null,\n                profilePictureUrl: botData.profilePictureUrl || null,\n                welcomeMessage: botData.welcomeMessage || null\n            };\n            bots[botData.id] = cleanBotData;\n            saveMockData(BOTS_FILE, bots);\n            return botData;\n        }\n        try {\n            const cleanBotData = {\n                ...botData,\n                description: botData.description || \"\",\n                deployedAt: botData.deployedAt || null,\n                profilePictureUrl: botData.profilePictureUrl || null,\n                welcomeMessage: botData.welcomeMessage || null\n            };\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"bots\").doc(botData.id).set(cleanBotData);\n            return botData;\n        } catch (error) {\n            console.error(\"Error updating bot in Firebase:\", error);\n            throw error;\n        }\n    },\n    // Get bots by owner ID\n    async getBotsByOwner (ownerId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const bots = loadMockData(BOTS_FILE);\n            const userBots = [];\n            Object.values(bots).forEach((bot)=>{\n                if (bot.ownerId === ownerId) {\n                    userBots.push({\n                        ...bot,\n                        createdAt: new Date(bot.createdAt),\n                        updatedAt: new Date(bot.updatedAt),\n                        deployedAt: bot.deployedAt ? new Date(bot.deployedAt) : undefined\n                    });\n                }\n            });\n            // Sort by createdAt descending\n            return userBots.sort((a, b)=>b.createdAt.getTime() - a.createdAt.getTime());\n        }\n        try {\n            const querySnapshot = await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"bots\").where(\"ownerId\", \"==\", ownerId).orderBy(\"createdAt\", \"desc\").get();\n            const firebaseBots = [];\n            querySnapshot.forEach((doc)=>{\n                firebaseBots.push({\n                    id: doc.id,\n                    ...doc.data()\n                });\n            });\n            return firebaseBots;\n        } catch (error) {\n            console.error(\"Error fetching bots by owner from Firebase:\", error);\n            return [];\n        }\n    },\n    // Get bots by phone number\n    async getBotsByPhoneNumber (phoneNumber) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const bots = loadMockData(BOTS_FILE);\n            const phoneBots = [];\n            Object.values(bots).forEach((bot)=>{\n                if (bot.ownerPhoneNumber === phoneNumber) {\n                    phoneBots.push({\n                        ...bot,\n                        createdAt: new Date(bot.createdAt),\n                        updatedAt: new Date(bot.updatedAt),\n                        deployedAt: bot.deployedAt ? new Date(bot.deployedAt) : undefined\n                    });\n                }\n            });\n            // Sort by createdAt descending\n            return phoneBots.sort((a, b)=>b.createdAt.getTime() - a.createdAt.getTime());\n        }\n        try {\n            const querySnapshot = await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"bots\").where(\"ownerPhoneNumber\", \"==\", phoneNumber).orderBy(\"createdAt\", \"desc\").get();\n            const firebaseBots = [];\n            querySnapshot.forEach((doc)=>{\n                firebaseBots.push({\n                    id: doc.id,\n                    ...doc.data()\n                });\n            });\n            return firebaseBots;\n        } catch (error) {\n            console.error(\"Error fetching bots by phone from Firebase:\", error);\n            return [];\n        }\n    },\n    // Enhanced getBotsByOwner that also checks phone number as fallback\n    async getBotsByOwnerWithFallback (ownerId, phoneNumber) {\n        let bots = await this.getBotsByOwner(ownerId);\n        if (bots.length === 0 && phoneNumber) {\n            const phoneBots = await this.getBotsByPhoneNumber(phoneNumber);\n            if (phoneBots.length > 0) {\n                for (const bot of phoneBots){\n                    bot.ownerId = ownerId;\n                    await this.updateBot(bot);\n                }\n                bots = phoneBots;\n            }\n        }\n        return bots;\n    },\n    // Delete bot\n    async deleteBot (botId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const bots = loadMockData(BOTS_FILE);\n            if (bots[botId]) {\n                delete bots[botId];\n                saveMockData(BOTS_FILE, bots);\n                return true;\n            }\n            return false;\n        }\n        try {\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"bots\").doc(botId).delete();\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting bot from Firebase:\", error);\n            return false;\n        }\n    },\n    // Chat Sessions Management\n    async createChatSession (sessionData) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const sessions = loadMockData(CHAT_SESSIONS_FILE);\n            sessions[sessionData.id] = sessionData;\n            saveMockData(CHAT_SESSIONS_FILE, sessions);\n            return sessionData;\n        }\n        try {\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"chatSessions\").doc(sessionData.id).set(sessionData);\n            return sessionData;\n        } catch (error) {\n            console.error(\"Error saving chat session to Firebase:\", error);\n            throw error;\n        }\n    },\n    async updateChatSession (sessionData) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const sessions = loadMockData(CHAT_SESSIONS_FILE);\n            sessions[sessionData.id] = sessionData;\n            saveMockData(CHAT_SESSIONS_FILE, sessions);\n            return sessionData;\n        }\n        try {\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"chatSessions\").doc(sessionData.id).set(sessionData);\n            return sessionData;\n        } catch (error) {\n            console.error(\"Error updating chat session in Firebase:\", error);\n            throw error;\n        }\n    },\n    async getChatSessionsByBot (botId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const sessions = loadMockData(CHAT_SESSIONS_FILE);\n            const botSessions = [];\n            Object.values(sessions).forEach((session)=>{\n                if (session.botId === botId) {\n                    botSessions.push({\n                        ...session,\n                        startedAt: new Date(session.startedAt),\n                        lastActivityAt: new Date(session.lastActivityAt)\n                    });\n                }\n            });\n            return botSessions.sort((a, b)=>b.lastActivityAt.getTime() - a.lastActivityAt.getTime());\n        }\n        try {\n            const querySnapshot = await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"chatSessions\").where(\"botId\", \"==\", botId).orderBy(\"lastActivityAt\", \"desc\").get();\n            const firebaseSessions = [];\n            querySnapshot.forEach((doc)=>{\n                firebaseSessions.push({\n                    id: doc.id,\n                    ...doc.data()\n                });\n            });\n            return firebaseSessions;\n        } catch (error) {\n            console.error(\"Error fetching chat sessions by bot from Firebase:\", error);\n            return [];\n        }\n    },\n    async getChatSessionsByUser (userId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const sessions = loadMockData(CHAT_SESSIONS_FILE);\n            const userSessions = [];\n            Object.values(sessions).forEach((session)=>{\n                if (session.userId === userId && session.isAuthenticated) {\n                    userSessions.push({\n                        ...session,\n                        startedAt: new Date(session.startedAt),\n                        lastActivityAt: new Date(session.lastActivityAt)\n                    });\n                }\n            });\n            return userSessions.sort((a, b)=>b.lastActivityAt.getTime() - a.lastActivityAt.getTime());\n        }\n        try {\n            // Use simpler query to avoid complex composite index requirements\n            const querySnapshot = await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"chatSessions\").where(\"userId\", \"==\", userId).get();\n            const firebaseSessions = [];\n            querySnapshot.forEach((doc)=>{\n                const sessionData = doc.data();\n                // Filter for authenticated sessions in memory\n                if (sessionData.isAuthenticated === true) {\n                    firebaseSessions.push({\n                        id: doc.id,\n                        ...sessionData\n                    });\n                }\n            });\n            // Sort by lastActivityAt in memory (descending)\n            return firebaseSessions.sort((a, b)=>{\n                const aTime = a.lastActivityAt instanceof Date ? a.lastActivityAt : new Date(a.lastActivityAt);\n                const bTime = b.lastActivityAt instanceof Date ? b.lastActivityAt : new Date(b.lastActivityAt);\n                return bTime.getTime() - aTime.getTime();\n            });\n        } catch (error) {\n            console.error(\"Error fetching chat sessions by user from Firebase:\", error);\n            return [];\n        }\n    },\n    async getChatSession (sessionId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const sessions = loadMockData(CHAT_SESSIONS_FILE);\n            const session = sessions[sessionId];\n            if (session) {\n                return {\n                    ...session,\n                    startedAt: new Date(session.startedAt),\n                    lastActivityAt: new Date(session.lastActivityAt)\n                };\n            }\n            return null;\n        }\n        try {\n            const docRef = _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"chatSessions\").doc(sessionId);\n            const docSnap = await docRef.get();\n            if (docSnap.exists) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error fetching chat session from Firebase:\", error);\n            return null;\n        }\n    },\n    // Unanswered Questions Management\n    async createUnansweredQuestion (questionData) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const questions = loadMockData(UNANSWERED_QUESTIONS_FILE);\n            questions[questionData.id] = questionData;\n            saveMockData(UNANSWERED_QUESTIONS_FILE, questions);\n            return questionData;\n        }\n        try {\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"unansweredQuestions\").doc(questionData.id).set(questionData);\n            return questionData;\n        } catch (error) {\n            console.error(\"Error saving unanswered question to Firebase:\", error);\n            throw error;\n        }\n    },\n    async updateUnansweredQuestion (questionData) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const questions = loadMockData(UNANSWERED_QUESTIONS_FILE);\n            questions[questionData.id] = questionData;\n            saveMockData(UNANSWERED_QUESTIONS_FILE, questions);\n            return questionData;\n        }\n        try {\n            await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"unansweredQuestions\").doc(questionData.id).set(questionData);\n            return questionData;\n        } catch (error) {\n            console.error(\"Error updating unanswered question in Firebase:\", error);\n            throw error;\n        }\n    },\n    async getUnansweredQuestionsByBot (botId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const questions = loadMockData(UNANSWERED_QUESTIONS_FILE);\n            const botQuestions = [];\n            Object.values(questions).forEach((question)=>{\n                if (question.botId === botId && !question.isAnswered) {\n                    botQuestions.push({\n                        ...question,\n                        timestamp: new Date(question.timestamp),\n                        respondedAt: question.respondedAt ? new Date(question.respondedAt) : undefined\n                    });\n                }\n            });\n            return botQuestions.sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime());\n        }\n        try {\n            const querySnapshot = await _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"unansweredQuestions\").where(\"botId\", \"==\", botId).where(\"isAnswered\", \"==\", false).get();\n            const questions = [];\n            querySnapshot.forEach((doc)=>{\n                questions.push({\n                    id: doc.id,\n                    ...doc.data()\n                });\n            });\n            return questions;\n        } catch (error) {\n            console.error(\"Error fetching unanswered questions from Firebase:\", error);\n            return [];\n        }\n    },\n    async getUnansweredQuestion (questionId) {\n        if (!_lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb) {\n            // Use mock database\n            const questions = loadMockData(UNANSWERED_QUESTIONS_FILE);\n            const question = questions[questionId];\n            if (question) {\n                return {\n                    ...question,\n                    timestamp: new Date(question.timestamp),\n                    respondedAt: question.respondedAt ? new Date(question.respondedAt) : undefined\n                };\n            }\n            return null;\n        }\n        try {\n            const docRef = _lib_firebase_admin__WEBPACK_IMPORTED_MODULE_2__.adminDb.collection(\"unansweredQuestions\").doc(questionId);\n            const docSnap = await docRef.get();\n            if (docSnap.exists) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"Error fetching unanswered question from Firebase:\", error);\n            return null;\n        }\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/database/index.ts\n");

/***/ }),

/***/ "(api)/./lib/firebase-admin.ts":
/*!*******************************!*\
  !*** ./lib/firebase-admin.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminDb: () => (/* binding */ adminDb)\n/* harmony export */ });\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/firestore */ \"firebase-admin/firestore\");\n/* harmony import */ var firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconsole.log(\"\\uD83D\\uDD0D Firebase Admin credentials check:\", {\n    hasProjectId: !!process.env.FIREBASE_PROJECT_ID,\n    hasClientEmail: !!process.env.FIREBASE_CLIENT_EMAIL,\n    hasPrivateKey: !!process.env.FIREBASE_PRIVATE_KEY,\n    isValidPrivateKey: process.env.FIREBASE_PRIVATE_KEY ? process.env.FIREBASE_PRIVATE_KEY.includes(\"BEGIN PRIVATE KEY\") : false,\n    hasValidCredentials: !!(process.env.FIREBASE_PROJECT_ID && process.env.FIREBASE_CLIENT_EMAIL && process.env.FIREBASE_PRIVATE_KEY),\n    privateKeyLength: process.env.FIREBASE_PRIVATE_KEY ? process.env.FIREBASE_PRIVATE_KEY.length : 0\n});\nlet adminDb = null;\n// Test Firebase connection\nasync function testFirebaseConnection(db) {\n    try {\n        await db.collection(\"_test\").limit(1).get();\n        console.log(\"✅ Firebase connection test successful\");\n    } catch (testError) {\n        console.warn(\"⚠️ Firebase connection test failed:\", testError instanceof Error ? testError.message : String(testError));\n        console.log(\"\\uD83D\\uDD04 Will fallback to mock database for operations\");\n    }\n}\ntry {\n    // Check if we have all required credentials\n    if (!process.env.FIREBASE_PROJECT_ID || !process.env.FIREBASE_CLIENT_EMAIL || !process.env.FIREBASE_PRIVATE_KEY) {\n        console.log(\"\\uD83D\\uDEAB Firebase Admin disabled - missing credentials, using mock data for development\");\n        adminDb = null;\n    } else {\n        // Initialize Firebase Admin if not already initialized\n        if ((0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length === 0) {\n            // Clean and validate the private key\n            let privateKey = process.env.FIREBASE_PRIVATE_KEY;\n            // Handle different private key formats\n            if (privateKey.startsWith('\"') && privateKey.endsWith('\"')) {\n                privateKey = privateKey.slice(1, -1);\n            }\n            // Replace escaped newlines with actual newlines\n            privateKey = privateKey.replace(/\\\\n/g, \"\\n\");\n            // Validate the private key format\n            if (!privateKey.includes(\"BEGIN PRIVATE KEY\") || !privateKey.includes(\"END PRIVATE KEY\")) {\n                throw new Error(\"Invalid private key format - must contain BEGIN and END PRIVATE KEY markers\");\n            }\n            console.log(\"\\uD83D\\uDD27 Initializing Firebase Admin with cleaned credentials...\");\n            const serviceAccount = {\n                projectId: process.env.FIREBASE_PROJECT_ID,\n                clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n                privateKey: privateKey\n            };\n            const app = (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)({\n                credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.cert)(serviceAccount),\n                projectId: process.env.FIREBASE_PROJECT_ID\n            });\n            adminDb = (0,firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\n            console.log(\"✅ Firebase Admin initialized successfully\");\n            // Test the connection asynchronously\n            testFirebaseConnection(adminDb);\n        } else {\n            adminDb = (0,firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)();\n            console.log(\"✅ Firebase Admin already initialized\");\n        }\n    }\n} catch (error) {\n    console.error(\"❌ Firebase Admin initialization failed:\", error instanceof Error ? error.message : String(error));\n    console.log(\"\\uD83D\\uDEAB Firebase Admin disabled - using mock data for development\");\n    adminDb = null;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZmlyZWJhc2UtYWRtaW4udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBa0U7QUFDVjtBQUV4REksUUFBUUMsR0FBRyxDQUFDLGtEQUF3QztJQUNsREMsY0FBYyxDQUFDLENBQUNDLFFBQVFDLEdBQUcsQ0FBQ0MsbUJBQW1CO0lBQy9DQyxnQkFBZ0IsQ0FBQyxDQUFDSCxRQUFRQyxHQUFHLENBQUNHLHFCQUFxQjtJQUNuREMsZUFBZSxDQUFDLENBQUNMLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CO0lBQ2pEQyxtQkFBbUJQLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLEdBQUdOLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLENBQUNFLFFBQVEsQ0FBQyx1QkFBdUI7SUFDdkhDLHFCQUFxQixDQUFDLENBQUVULENBQUFBLFFBQVFDLEdBQUcsQ0FBQ0MsbUJBQW1CLElBQUlGLFFBQVFDLEdBQUcsQ0FBQ0cscUJBQXFCLElBQUlKLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CO0lBQ2hJSSxrQkFBa0JWLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLEdBQUdOLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLENBQUNLLE1BQU0sR0FBRztBQUNqRztBQUVBLElBQUlDLFVBQThDO0FBRWxELDJCQUEyQjtBQUMzQixlQUFlQyx1QkFBdUJDLEVBQStCO0lBQ25FLElBQUk7UUFDRixNQUFNQSxHQUFHQyxVQUFVLENBQUMsU0FBU0MsS0FBSyxDQUFDLEdBQUdDLEdBQUc7UUFDekNwQixRQUFRQyxHQUFHLENBQUM7SUFDZCxFQUFFLE9BQU9vQixXQUFXO1FBQ2xCckIsUUFBUXNCLElBQUksQ0FBQyx1Q0FBdUNELHFCQUFxQkUsUUFBUUYsVUFBVUcsT0FBTyxHQUFHQyxPQUFPSjtRQUM1R3JCLFFBQVFDLEdBQUcsQ0FBQztJQUNkO0FBQ0Y7QUFFQSxJQUFJO0lBQ0YsNENBQTRDO0lBQzVDLElBQUksQ0FBQ0UsUUFBUUMsR0FBRyxDQUFDQyxtQkFBbUIsSUFBSSxDQUFDRixRQUFRQyxHQUFHLENBQUNHLHFCQUFxQixJQUFJLENBQUNKLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLEVBQUU7UUFDL0dULFFBQVFDLEdBQUcsQ0FBQztRQUNaYyxVQUFVO0lBQ1osT0FBTztRQUNMLHVEQUF1RDtRQUN2RCxJQUFJbEIsMkRBQU9BLEdBQUdpQixNQUFNLEtBQUssR0FBRztZQUMxQixxQ0FBcUM7WUFDckMsSUFBSVksYUFBYXZCLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CO1lBRWpELHVDQUF1QztZQUN2QyxJQUFJaUIsV0FBV0MsVUFBVSxDQUFDLFFBQVFELFdBQVdFLFFBQVEsQ0FBQyxNQUFNO2dCQUMxREYsYUFBYUEsV0FBV0csS0FBSyxDQUFDLEdBQUcsQ0FBQztZQUNwQztZQUVBLGdEQUFnRDtZQUNoREgsYUFBYUEsV0FBV0ksT0FBTyxDQUFDLFFBQVE7WUFFeEMsa0NBQWtDO1lBQ2xDLElBQUksQ0FBQ0osV0FBV2YsUUFBUSxDQUFDLHdCQUF3QixDQUFDZSxXQUFXZixRQUFRLENBQUMsb0JBQW9CO2dCQUN4RixNQUFNLElBQUlZLE1BQU07WUFDbEI7WUFFQXZCLFFBQVFDLEdBQUcsQ0FBQztZQUVaLE1BQU04QixpQkFBaUI7Z0JBQ3JCQyxXQUFXN0IsUUFBUUMsR0FBRyxDQUFDQyxtQkFBbUI7Z0JBQzFDNEIsYUFBYTlCLFFBQVFDLEdBQUcsQ0FBQ0cscUJBQXFCO2dCQUM5Q21CLFlBQVlBO1lBQ2Q7WUFFQSxNQUFNUSxNQUFNdEMsaUVBQWFBLENBQUM7Z0JBQ3hCdUMsWUFBWXJDLHdEQUFJQSxDQUFDaUM7Z0JBQ2pCQyxXQUFXN0IsUUFBUUMsR0FBRyxDQUFDQyxtQkFBbUI7WUFDNUM7WUFFQVUsVUFBVWhCLHNFQUFZQSxDQUFDbUM7WUFDdkJsQyxRQUFRQyxHQUFHLENBQUM7WUFFWixxQ0FBcUM7WUFDckNlLHVCQUF1QkQ7UUFDekIsT0FBTztZQUNMQSxVQUFVaEIsc0VBQVlBO1lBQ3RCQyxRQUFRQyxHQUFHLENBQUM7UUFDZDtJQUNGO0FBQ0YsRUFBRSxPQUFPbUMsT0FBTztJQUNkcEMsUUFBUW9DLEtBQUssQ0FBQywyQ0FBMkNBLGlCQUFpQmIsUUFBUWEsTUFBTVosT0FBTyxHQUFHQyxPQUFPVztJQUN6R3BDLFFBQVFDLEdBQUcsQ0FBQztJQUNaYyxVQUFVO0FBQ1o7QUFFbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3F1ZS1ib3QtcGxhdGZvcm0vLi9saWIvZmlyZWJhc2UtYWRtaW4udHM/NmE0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQXBwLCBnZXRBcHBzLCBjZXJ0IH0gZnJvbSAnZmlyZWJhc2UtYWRtaW4vYXBwJztcbmltcG9ydCB7IGdldEZpcmVzdG9yZSB9IGZyb20gJ2ZpcmViYXNlLWFkbWluL2ZpcmVzdG9yZSc7XG5cbmNvbnNvbGUubG9nKCfwn5SNIEZpcmViYXNlIEFkbWluIGNyZWRlbnRpYWxzIGNoZWNrOicsIHtcbiAgaGFzUHJvamVjdElkOiAhIXByb2Nlc3MuZW52LkZJUkVCQVNFX1BST0pFQ1RfSUQsXG4gIGhhc0NsaWVudEVtYWlsOiAhIXByb2Nlc3MuZW52LkZJUkVCQVNFX0NMSUVOVF9FTUFJTCxcbiAgaGFzUHJpdmF0ZUtleTogISFwcm9jZXNzLmVudi5GSVJFQkFTRV9QUklWQVRFX0tFWSxcbiAgaXNWYWxpZFByaXZhdGVLZXk6IHByb2Nlc3MuZW52LkZJUkVCQVNFX1BSSVZBVEVfS0VZID8gcHJvY2Vzcy5lbnYuRklSRUJBU0VfUFJJVkFURV9LRVkuaW5jbHVkZXMoJ0JFR0lOIFBSSVZBVEUgS0VZJykgOiBmYWxzZSxcbiAgaGFzVmFsaWRDcmVkZW50aWFsczogISEocHJvY2Vzcy5lbnYuRklSRUJBU0VfUFJPSkVDVF9JRCAmJiBwcm9jZXNzLmVudi5GSVJFQkFTRV9DTElFTlRfRU1BSUwgJiYgcHJvY2Vzcy5lbnYuRklSRUJBU0VfUFJJVkFURV9LRVkpLFxuICBwcml2YXRlS2V5TGVuZ3RoOiBwcm9jZXNzLmVudi5GSVJFQkFTRV9QUklWQVRFX0tFWSA/IHByb2Nlc3MuZW52LkZJUkVCQVNFX1BSSVZBVEVfS0VZLmxlbmd0aCA6IDBcbn0pO1xuXG5sZXQgYWRtaW5EYjogRmlyZWJhc2VGaXJlc3RvcmUuRmlyZXN0b3JlIHwgbnVsbCA9IG51bGw7XG5cbi8vIFRlc3QgRmlyZWJhc2UgY29ubmVjdGlvblxuYXN5bmMgZnVuY3Rpb24gdGVzdEZpcmViYXNlQ29ubmVjdGlvbihkYjogRmlyZWJhc2VGaXJlc3RvcmUuRmlyZXN0b3JlKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgZGIuY29sbGVjdGlvbignX3Rlc3QnKS5saW1pdCgxKS5nZXQoKTtcbiAgICBjb25zb2xlLmxvZygn4pyFIEZpcmViYXNlIGNvbm5lY3Rpb24gdGVzdCBzdWNjZXNzZnVsJyk7XG4gIH0gY2F0Y2ggKHRlc3RFcnJvcikge1xuICAgIGNvbnNvbGUud2Fybign4pqg77iPIEZpcmViYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgdGVzdEVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyB0ZXN0RXJyb3IubWVzc2FnZSA6IFN0cmluZyh0ZXN0RXJyb3IpKTtcbiAgICBjb25zb2xlLmxvZygn8J+UhCBXaWxsIGZhbGxiYWNrIHRvIG1vY2sgZGF0YWJhc2UgZm9yIG9wZXJhdGlvbnMnKTtcbiAgfVxufVxuXG50cnkge1xuICAvLyBDaGVjayBpZiB3ZSBoYXZlIGFsbCByZXF1aXJlZCBjcmVkZW50aWFsc1xuICBpZiAoIXByb2Nlc3MuZW52LkZJUkVCQVNFX1BST0pFQ1RfSUQgfHwgIXByb2Nlc3MuZW52LkZJUkVCQVNFX0NMSUVOVF9FTUFJTCB8fCAhcHJvY2Vzcy5lbnYuRklSRUJBU0VfUFJJVkFURV9LRVkpIHtcbiAgICBjb25zb2xlLmxvZygn8J+aqyBGaXJlYmFzZSBBZG1pbiBkaXNhYmxlZCAtIG1pc3NpbmcgY3JlZGVudGlhbHMsIHVzaW5nIG1vY2sgZGF0YSBmb3IgZGV2ZWxvcG1lbnQnKTtcbiAgICBhZG1pbkRiID0gbnVsbDtcbiAgfSBlbHNlIHtcbiAgICAvLyBJbml0aWFsaXplIEZpcmViYXNlIEFkbWluIGlmIG5vdCBhbHJlYWR5IGluaXRpYWxpemVkXG4gICAgaWYgKGdldEFwcHMoKS5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIENsZWFuIGFuZCB2YWxpZGF0ZSB0aGUgcHJpdmF0ZSBrZXlcbiAgICAgIGxldCBwcml2YXRlS2V5ID0gcHJvY2Vzcy5lbnYuRklSRUJBU0VfUFJJVkFURV9LRVk7XG4gICAgICBcbiAgICAgIC8vIEhhbmRsZSBkaWZmZXJlbnQgcHJpdmF0ZSBrZXkgZm9ybWF0c1xuICAgICAgaWYgKHByaXZhdGVLZXkuc3RhcnRzV2l0aCgnXCInKSAmJiBwcml2YXRlS2V5LmVuZHNXaXRoKCdcIicpKSB7XG4gICAgICAgIHByaXZhdGVLZXkgPSBwcml2YXRlS2V5LnNsaWNlKDEsIC0xKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gUmVwbGFjZSBlc2NhcGVkIG5ld2xpbmVzIHdpdGggYWN0dWFsIG5ld2xpbmVzXG4gICAgICBwcml2YXRlS2V5ID0gcHJpdmF0ZUtleS5yZXBsYWNlKC9cXFxcbi9nLCAnXFxuJyk7XG4gICAgICBcbiAgICAgIC8vIFZhbGlkYXRlIHRoZSBwcml2YXRlIGtleSBmb3JtYXRcbiAgICAgIGlmICghcHJpdmF0ZUtleS5pbmNsdWRlcygnQkVHSU4gUFJJVkFURSBLRVknKSB8fCAhcHJpdmF0ZUtleS5pbmNsdWRlcygnRU5EIFBSSVZBVEUgS0VZJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHByaXZhdGUga2V5IGZvcm1hdCAtIG11c3QgY29udGFpbiBCRUdJTiBhbmQgRU5EIFBSSVZBVEUgS0VZIG1hcmtlcnMnKTtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ/CflKcgSW5pdGlhbGl6aW5nIEZpcmViYXNlIEFkbWluIHdpdGggY2xlYW5lZCBjcmVkZW50aWFscy4uLicpO1xuICAgICAgXG4gICAgICBjb25zdCBzZXJ2aWNlQWNjb3VudCA9IHtcbiAgICAgICAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5GSVJFQkFTRV9QUk9KRUNUX0lELFxuICAgICAgICBjbGllbnRFbWFpbDogcHJvY2Vzcy5lbnYuRklSRUJBU0VfQ0xJRU5UX0VNQUlMLFxuICAgICAgICBwcml2YXRlS2V5OiBwcml2YXRlS2V5LFxuICAgICAgfTtcblxuICAgICAgY29uc3QgYXBwID0gaW5pdGlhbGl6ZUFwcCh7XG4gICAgICAgIGNyZWRlbnRpYWw6IGNlcnQoc2VydmljZUFjY291bnQpLFxuICAgICAgICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52LkZJUkVCQVNFX1BST0pFQ1RfSUQsXG4gICAgICB9KTtcblxuICAgICAgYWRtaW5EYiA9IGdldEZpcmVzdG9yZShhcHApO1xuICAgICAgY29uc29sZS5sb2coJ+KchSBGaXJlYmFzZSBBZG1pbiBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHknKTtcbiAgICAgIFxuICAgICAgLy8gVGVzdCB0aGUgY29ubmVjdGlvbiBhc3luY2hyb25vdXNseVxuICAgICAgdGVzdEZpcmViYXNlQ29ubmVjdGlvbihhZG1pbkRiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWRtaW5EYiA9IGdldEZpcmVzdG9yZSgpO1xuICAgICAgY29uc29sZS5sb2coJ+KchSBGaXJlYmFzZSBBZG1pbiBhbHJlYWR5IGluaXRpYWxpemVkJyk7XG4gICAgfVxuICB9XG59IGNhdGNoIChlcnJvcikge1xuICBjb25zb2xlLmVycm9yKCfinYwgRmlyZWJhc2UgQWRtaW4gaW5pdGlhbGl6YXRpb24gZmFpbGVkOicsIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogU3RyaW5nKGVycm9yKSk7XG4gIGNvbnNvbGUubG9nKCfwn5qrIEZpcmViYXNlIEFkbWluIGRpc2FibGVkIC0gdXNpbmcgbW9jayBkYXRhIGZvciBkZXZlbG9wbWVudCcpO1xuICBhZG1pbkRiID0gbnVsbDtcbn1cblxuZXhwb3J0IHsgYWRtaW5EYiB9OyAiXSwibmFtZXMiOlsiaW5pdGlhbGl6ZUFwcCIsImdldEFwcHMiLCJjZXJ0IiwiZ2V0RmlyZXN0b3JlIiwiY29uc29sZSIsImxvZyIsImhhc1Byb2plY3RJZCIsInByb2Nlc3MiLCJlbnYiLCJGSVJFQkFTRV9QUk9KRUNUX0lEIiwiaGFzQ2xpZW50RW1haWwiLCJGSVJFQkFTRV9DTElFTlRfRU1BSUwiLCJoYXNQcml2YXRlS2V5IiwiRklSRUJBU0VfUFJJVkFURV9LRVkiLCJpc1ZhbGlkUHJpdmF0ZUtleSIsImluY2x1ZGVzIiwiaGFzVmFsaWRDcmVkZW50aWFscyIsInByaXZhdGVLZXlMZW5ndGgiLCJsZW5ndGgiLCJhZG1pbkRiIiwidGVzdEZpcmViYXNlQ29ubmVjdGlvbiIsImRiIiwiY29sbGVjdGlvbiIsImxpbWl0IiwiZ2V0IiwidGVzdEVycm9yIiwid2FybiIsIkVycm9yIiwibWVzc2FnZSIsIlN0cmluZyIsInByaXZhdGVLZXkiLCJzdGFydHNXaXRoIiwiZW5kc1dpdGgiLCJzbGljZSIsInJlcGxhY2UiLCJzZXJ2aWNlQWNjb3VudCIsInByb2plY3RJZCIsImNsaWVudEVtYWlsIiwiYXBwIiwiY3JlZGVudGlhbCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/firebase-admin.ts\n");

/***/ }),

/***/ "(api)/./lib/firebase.ts":
/*!*************************!*\
  !*** ./lib/firebase.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"firebase/app\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, firebase_auth__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, firebase_auth__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBhg_QAiNn65doXbbD7f-a7Q7s5i0Rqm_k\",\n    authDomain: \"askitai.firebaseapp.com\",\n    projectId: \"askitai\",\n    storageBucket: \"askitai.firebasestorage.app\",\n    messagingSenderId: \"946988582968\",\n    appId: \"1:946988582968:web:6d6a97b69ab0a61169becd\"\n};\n// Initialize Firebase only if not already initialized\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length === 0 ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\nconsole.log(\"✅ Firebase client initialized with Auth\");\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZmlyZWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDSjtBQUNWO0FBRXhDLE1BQU1JLGlCQUFpQjtJQUNyQkMsUUFBUUMseUNBQXdDO0lBQ2hERyxZQUFZSCx5QkFBNEM7SUFDeERLLFdBQVdMLFNBQTJDO0lBQ3RETyxlQUFlUCw2QkFBK0M7SUFDOURTLG1CQUFtQlQsY0FBb0Q7SUFDdkVXLE9BQU9YLDJDQUF1QztBQUNoRDtBQUVBLHNEQUFzRDtBQUN0RCxNQUFNYSxNQUFNbEIscURBQU9BLEdBQUdtQixNQUFNLEtBQUssSUFBSXBCLDJEQUFhQSxDQUFDSSxrQkFBa0JILHFEQUFPQSxFQUFFLENBQUMsRUFBRTtBQUUxRSxNQUFNb0IsS0FBS25CLGdFQUFZQSxDQUFDaUIsS0FBSztBQUM3QixNQUFNRyxPQUFPbkIsc0RBQU9BLENBQUNnQixLQUFLO0FBRWpDSSxRQUFRQyxHQUFHLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3F1ZS1ib3QtcGxhdGZvcm0vLi9saWIvZmlyZWJhc2UudHM/NWQyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQXBwLCBnZXRBcHBzIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IGdldEZpcmVzdG9yZSB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XG5pbXBvcnQgeyBnZXRBdXRoIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7XG5cbmNvbnN0IGZpcmViYXNlQ29uZmlnID0ge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVksXG4gIGF1dGhEb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOLFxuICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQsXG4gIHN0b3JhZ2VCdWNrZXQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VULFxuICBtZXNzYWdpbmdTZW5kZXJJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCxcbiAgYXBwSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCxcbn07XG5cbi8vIEluaXRpYWxpemUgRmlyZWJhc2Ugb25seSBpZiBub3QgYWxyZWFkeSBpbml0aWFsaXplZFxuY29uc3QgYXBwID0gZ2V0QXBwcygpLmxlbmd0aCA9PT0gMCA/IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpIDogZ2V0QXBwcygpWzBdO1xuXG5leHBvcnQgY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoYXBwKTtcbmV4cG9ydCBjb25zdCBhdXRoID0gZ2V0QXV0aChhcHApO1xuXG5jb25zb2xlLmxvZygn4pyFIEZpcmViYXNlIGNsaWVudCBpbml0aWFsaXplZCB3aXRoIEF1dGgnKTsgIl0sIm5hbWVzIjpbImluaXRpYWxpemVBcHAiLCJnZXRBcHBzIiwiZ2V0RmlyZXN0b3JlIiwiZ2V0QXV0aCIsImZpcmViYXNlQ29uZmlnIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkiLCJhdXRoRG9tYWluIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4iLCJwcm9qZWN0SWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEIiwic3RvcmFnZUJ1Y2tldCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUIiwibWVzc2FnaW5nU2VuZGVySWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEIiwiYXBwSWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQiLCJhcHAiLCJsZW5ndGgiLCJkYiIsImF1dGgiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/firebase.ts\n");

/***/ }),

/***/ "(api)/./pages/api/bots/by-owner/[ownerId].ts":
/*!**********************************************!*\
  !*** ./pages/api/bots/by-owner/[ownerId].ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/database */ \"(api)/./lib/database/index.ts\");\n/* harmony import */ var _lib_auth_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth/server */ \"(api)/./lib/auth/server.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_database__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst handler = async (req, res)=>{\n    console.log(\"API called, headers:\", req.headers); // DEBUG LOG\n    const { ownerId } = req.query;\n    const authenticatedUserId = req.user.uid;\n    const userPhoneNumber = req.user.phoneNumber;\n    // Ensure user can only access their own bots\n    if (!ownerId || typeof ownerId !== \"string\") {\n        return res.status(400).json({\n            success: false,\n            error: \"Owner ID is required\",\n            timestamp: new Date()\n        });\n    }\n    if (ownerId !== authenticatedUserId) {\n        return res.status(403).json({\n            success: false,\n            error: \"Access denied: You can only access your own bots\",\n            timestamp: new Date()\n        });\n    }\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            success: false,\n            error: \"Method not allowed\",\n            timestamp: new Date()\n        });\n    }\n    try {\n        console.log(\"\\uD83D\\uDCCB Fetching bots for authenticated user:\", authenticatedUserId);\n        console.log(\"\\uD83D\\uDCF1 User phone number:\", userPhoneNumber);\n        // Use the enhanced method that includes phone number fallback\n        const bots = await _lib_database__WEBPACK_IMPORTED_MODULE_0__.serverDb.getBotsByOwnerWithFallback(authenticatedUserId, userPhoneNumber);\n        console.log(\"✅ Found bots:\", bots.length);\n        console.log(\"Bots returned to client:\", bots); // DEBUG LOG\n        return res.status(200).json({\n            success: true,\n            data: bots,\n            timestamp: new Date()\n        });\n    } catch (error) {\n        console.error(\"❌ Error fetching bots by owner:\", error);\n        // Return empty array instead of error to prevent loading issues\n        return res.status(200).json({\n            success: true,\n            data: [],\n            timestamp: new Date()\n        });\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_lib_auth_server__WEBPACK_IMPORTED_MODULE_1__.withAuth)(handler));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYm90cy9ieS1vd25lci9bb3duZXJJZF0udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRTBDO0FBQ3lCO0FBTW5FLE1BQU1FLFVBQVUsT0FDZEMsS0FDQUM7SUFFQUMsUUFBUUMsR0FBRyxDQUFDLHdCQUF3QkgsSUFBSUksT0FBTyxHQUFHLFlBQVk7SUFDOUQsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0wsSUFBSU0sS0FBSztJQUM3QixNQUFNQyxzQkFBc0JQLElBQUlRLElBQUksQ0FBQ0MsR0FBRztJQUN4QyxNQUFNQyxrQkFBa0JWLElBQUlRLElBQUksQ0FBQ0csV0FBVztJQUU1Qyw2Q0FBNkM7SUFDN0MsSUFBSSxDQUFDTixXQUFXLE9BQU9BLFlBQVksVUFBVTtRQUMzQyxPQUFPSixJQUFJVyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsV0FBVyxJQUFJQztRQUNqQjtJQUNGO0lBRUEsSUFBSVosWUFBWUUscUJBQXFCO1FBQ25DLE9BQU9OLElBQUlXLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVEMsT0FBTztZQUNQQyxXQUFXLElBQUlDO1FBQ2pCO0lBQ0Y7SUFFQSxJQUFJakIsSUFBSWtCLE1BQU0sS0FBSyxPQUFPO1FBQ3hCLE9BQU9qQixJQUFJVyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsV0FBVyxJQUFJQztRQUNqQjtJQUNGO0lBRUEsSUFBSTtRQUNGZixRQUFRQyxHQUFHLENBQUMsc0RBQTRDSTtRQUN4REwsUUFBUUMsR0FBRyxDQUFDLG1DQUF5Qk87UUFFckMsOERBQThEO1FBQzlELE1BQU1TLE9BQU8sTUFBTXRCLG1EQUFRQSxDQUFDdUIsMEJBQTBCLENBQUNiLHFCQUFxQkc7UUFFNUVSLFFBQVFDLEdBQUcsQ0FBQyxpQkFBaUJnQixLQUFLRSxNQUFNO1FBQ3hDbkIsUUFBUUMsR0FBRyxDQUFDLDRCQUE0QmdCLE9BQU8sWUFBWTtRQUUzRCxPQUFPbEIsSUFBSVcsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsU0FBUztZQUNUUSxNQUFNSDtZQUNOSCxXQUFXLElBQUlDO1FBQ2pCO0lBRUYsRUFBRSxPQUFPRixPQUFPO1FBQ2RiLFFBQVFhLEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELGdFQUFnRTtRQUNoRSxPQUFPZCxJQUFJVyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RRLE1BQU0sRUFBRTtZQUNSTixXQUFXLElBQUlDO1FBQ2pCO0lBQ0Y7QUFDRjtBQUVBLGlFQUFlbkIsMERBQVFBLENBQUNDLFFBQVFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3F1ZS1ib3QtcGxhdGZvcm0vLi9wYWdlcy9hcGkvYm90cy9ieS1vd25lci9bb3duZXJJZF0udHM/N2FkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IEJvdCwgQXBpUmVzcG9uc2UgfSBmcm9tICdAL3R5cGVzJztcbmltcG9ydCB7IHNlcnZlckRiIH0gZnJvbSAnQC9saWIvZGF0YWJhc2UnO1xuaW1wb3J0IHsgd2l0aEF1dGgsIEF1dGhlbnRpY2F0ZWRSZXF1ZXN0IH0gZnJvbSAnQC9saWIvYXV0aC9zZXJ2ZXInO1xuXG5pbnRlcmZhY2UgQm90c1Jlc3BvbnNlIGV4dGVuZHMgQXBpUmVzcG9uc2Uge1xuICBkYXRhPzogQm90W107XG59XG5cbmNvbnN0IGhhbmRsZXIgPSBhc3luYyAoXG4gIHJlcTogQXV0aGVudGljYXRlZFJlcXVlc3QsXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPEJvdHNSZXNwb25zZT5cbikgPT4ge1xuICBjb25zb2xlLmxvZygnQVBJIGNhbGxlZCwgaGVhZGVyczonLCByZXEuaGVhZGVycyk7IC8vIERFQlVHIExPR1xuICBjb25zdCB7IG93bmVySWQgfSA9IHJlcS5xdWVyeTtcbiAgY29uc3QgYXV0aGVudGljYXRlZFVzZXJJZCA9IHJlcS51c2VyLnVpZDtcbiAgY29uc3QgdXNlclBob25lTnVtYmVyID0gcmVxLnVzZXIucGhvbmVOdW1iZXI7XG5cbiAgLy8gRW5zdXJlIHVzZXIgY2FuIG9ubHkgYWNjZXNzIHRoZWlyIG93biBib3RzXG4gIGlmICghb3duZXJJZCB8fCB0eXBlb2Ygb3duZXJJZCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ093bmVyIElEIGlzIHJlcXVpcmVkJyxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKG93bmVySWQgIT09IGF1dGhlbnRpY2F0ZWRVc2VySWQpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ0FjY2VzcyBkZW5pZWQ6IFlvdSBjYW4gb25seSBhY2Nlc3MgeW91ciBvd24gYm90cycsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKClcbiAgICB9KTtcbiAgfVxuXG4gIGlmIChyZXEubWV0aG9kICE9PSAnR0VUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxuICAgIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+TiyBGZXRjaGluZyBib3RzIGZvciBhdXRoZW50aWNhdGVkIHVzZXI6JywgYXV0aGVudGljYXRlZFVzZXJJZCk7XG4gICAgY29uc29sZS5sb2coJ/Cfk7EgVXNlciBwaG9uZSBudW1iZXI6JywgdXNlclBob25lTnVtYmVyKTtcbiAgICBcbiAgICAvLyBVc2UgdGhlIGVuaGFuY2VkIG1ldGhvZCB0aGF0IGluY2x1ZGVzIHBob25lIG51bWJlciBmYWxsYmFja1xuICAgIGNvbnN0IGJvdHMgPSBhd2FpdCBzZXJ2ZXJEYi5nZXRCb3RzQnlPd25lcldpdGhGYWxsYmFjayhhdXRoZW50aWNhdGVkVXNlcklkLCB1c2VyUGhvbmVOdW1iZXIpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCfinIUgRm91bmQgYm90czonLCBib3RzLmxlbmd0aCk7XG4gICAgY29uc29sZS5sb2coJ0JvdHMgcmV0dXJuZWQgdG8gY2xpZW50OicsIGJvdHMpOyAvLyBERUJVRyBMT0dcbiAgICBcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IGJvdHMsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKClcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBmZXRjaGluZyBib3RzIGJ5IG93bmVyOicsIGVycm9yKTtcbiAgICAvLyBSZXR1cm4gZW1wdHkgYXJyYXkgaW5zdGVhZCBvZiBlcnJvciB0byBwcmV2ZW50IGxvYWRpbmcgaXNzdWVzXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiBbXSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoQXV0aChoYW5kbGVyKTsgIl0sIm5hbWVzIjpbInNlcnZlckRiIiwid2l0aEF1dGgiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsImhlYWRlcnMiLCJvd25lcklkIiwicXVlcnkiLCJhdXRoZW50aWNhdGVkVXNlcklkIiwidXNlciIsInVpZCIsInVzZXJQaG9uZU51bWJlciIsInBob25lTnVtYmVyIiwic3RhdHVzIiwianNvbiIsInN1Y2Nlc3MiLCJlcnJvciIsInRpbWVzdGFtcCIsIkRhdGUiLCJtZXRob2QiLCJib3RzIiwiZ2V0Qm90c0J5T3duZXJXaXRoRmFsbGJhY2siLCJsZW5ndGgiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/bots/by-owner/[ownerId].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fbots%2Fby-owner%2F%5BownerId%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();